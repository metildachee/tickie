{"version":3,"sources":["pages/Landing/kpi.jpg","pages/Landing/productivity.jpg","logic/authentication/index.js","logic/general/index.js","logic/ticket/index.js","logic/user/index.js","logic/category/index.js","logic/organisation/index.js","components/GlobalStoreProvider/index.jsx","pages/Dashboard/Client_Table.jsx","pages/Dashboard/Client_AddTicketButton.jsx","components/AlertButton.jsx","components/AddCategoryButton/CollectionCreateForm.jsx","components/Notification.jsx","components/AddCategoryButton/index.jsx","components/AddOrganisationButton/OrganisationCreateForm.jsx","components/AddOrganisationButton/index.jsx","components/AddAccountButton/CollectionCreateForm.jsx","components/AddAccountButton/index.jsx","components/AdminUpdateTicketButton/AdminSelectors.jsx","components/AdminUpdateTicketButton/index.jsx","pages/Dashboard/Admin_Table.jsx","pages/Dashboard/index.jsx","pages/AddTicketForm/index.jsx","components/Navigation/ViewProfileButton/KPITracker.jsx","components/Navigation/ViewProfileButton/SearchableTable.jsx","components/Navigation/ViewProfileButton/index.jsx","components/Navigation/index.jsx","pages/NoEntry/index.jsx","components/Login/index.jsx","pages/Landing/GithubIcon/index.jsx","pages/Landing/index.jsx","App.js","index.js"],"names":["module","exports","NAMESPACE","getUser","dispatch","a","token","window","localStorage","getItem","axios","get","headers","results","type","payload","data","user","console","log","login","setItem","navigate","isAdmin","state","isClient","isAgent","SERVER_URL","getTickets","TOKEN","tickets","error","updateSort","createTicket","ticket","post","location","href","updateTicket","agent","priority","status","put","_id","assigned_to","newTicket","getAgents","users","getAllUsers","addAccount","addCategory","value","name","charAt","toUpperCase","substring","category","getCategories","categories","addOrganisation","formatName","description","org","getOrganisations","split","map","word","join","initialState","isCheckingLoginStatus","isAuth","isGettingTickets","agents","organisations","store","createContext","Provider","GlobalStoreProvider","children","useReducer","action","nextState","authentication","isChecking","tic","organisation","undefined","DragHandle","sortableHandle","MenuOutlined","style","cursor","color","columns","title","dataIndex","width","className","render","row","icon","ExclamationCircleOutlined","ClockCircleOutlined","SyncOutlined","spin","CheckCircleOutlined","SortableTable","useContext","useEffect","dataSource","SortableItem","sortableElement","props","SortableContainer","sortableContainer","onSortEnd","oldIndex","newIndex","newData","arrayMove","concat","filter","el","pagination","position","pageSize","rowKey","components","body","wrapper","useDragHandle","helperClass","restProps","index","findIndex","x","Client_AddTicketButton","to","AlertButton","visible","alertMsg","marginBottom","message","showIcon","closable","CollectionCreateForm","onCreate","onCancel","useState","alertVisible","setAlertVisible","Form","useForm","form","okText","cancelText","onOk","validateFields","then","values","find","cat","categoryExists","resetFields","catch","info","layout","initialValues","modifier","Item","label","rules","required","openNotificationWithIcon","msg","desc","notification","CollectionsPage","setVisible","marginRight","onClick","organisationExists","Option","Select","setAlertMsg","orgs","pwd1","pwd2","email","checkEmailExists","password","password2","Password","placeholder","allowClear","key","Group","fname","lname","PrioritySelector","onChange","e","assignPriority","StatusSelector","admin","assignStatus","AgentSelector","agentsArr","id","assignAgent","UpdateTicketButton","ModalText","setModelText","confirmLoading","setConfirmLoading","assignedAgent","assignedPriority","assignedStatus","setTimeout","AdminDashboard","searchText","setSearchText","searchedCol","setSearchedCol","searchInput","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","target","onPressEnter","handleSearch","display","SearchOutlined","size","handleReset","filterIcon","filtered","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","select","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","splice","length","margin","Dashboard","client","justify","AddTicketForm","componentSize","setComponentSize","titlePopupVisible","setTitlePopupVisible","descPopupVisibile","setDescPopupVisible","justifyContent","alignItems","height","onValuesChange","onFinish","validateMessages","Button","content","trigger","onVisibleChange","TextArea","htmlType","KPITracker","noOfClosedTickets","getClosedTickets","noOfOpenTickets","getOpenTickets","noOfAssignedTickets","getAssignedTickets","noOfInprogressTickets","getWIPTickets","span","prefix","LikeOutlined","suffix","SearchableTable","setData","getType","DescriptionItem","Nav_ProfileButton","fullName","getFullName","getEmail","userID","getUserID","userType","getUserType","userRole","role","getUserRole","userDesc","getUserDesc","paddingRight","preventDefault","showDrawer","placement","onClose","removeItem","logout","Navigation","fontSize","paddingLeft","fontFamily","fontWeight","NoEntry","Text","Typography","Login","checkToken","response","paddingBottom","remember","onFinishFailed","errorInfo","afterClose","valuePropName","marginTop","shape","ghost","styles","GithubOutlined","top","right","zIndex","Landing","mark","src","Productivity","alt","KPI","App","isLogin","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.33eafc48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kpi.91f3cb17.jpg\";","module.exports = __webpack_public_path__ + \"static/media/productivity.a9617a44.jpg\";","import { navigate } from \"hookrouter\";\nimport { getServerURL } from \"../general\";\nimport axios from \"axios\";\n\n// Module name\nexport const NAMESPACE = \"authentication\";\nconst SERVER_URL = getServerURL();\n\n// Constants\nconst LOCALSTORAGE_KEY = \"token\";\n\n// Actions\nexport const logout = (dispatch) => {\n  window.localStorage.removeItem(LOCALSTORAGE_KEY);\n  dispatch({\n    type: \"LOGOUT\",\n    module: NAMESPACE,\n  });\n  navigate(\"/tickie\");\n};\n\nexport const getUser = async (dispatch) => {\n  const token = window.localStorage.getItem(\"token\");\n  try {\n    let results = await axios.get(`${SERVER_URL}/auth/user`, {\n      headers: { token: token },\n    });\n    dispatch({\n      type: \"SET_USER\",\n      module: NAMESPACE,\n      payload: results.data.user,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const login = (dispatch, token) => {\n  dispatch({ type: \"CHECKING\", module: NAMESPACE });\n  window.localStorage.setItem(LOCALSTORAGE_KEY, token);\n  dispatch({\n    type: \"LOGIN\",\n    module: NAMESPACE,\n  });\n  getUser(dispatch);\n  navigate(\"/tickie\");\n};\n\nexport const checkToken = (dispatch) => {\n  dispatch({ type: \"CHECKING\", module: NAMESPACE });\n\n  const token = window.localStorage.getItem(LOCALSTORAGE_KEY);\n  if (token && token.length > 0) {\n    dispatch({ type: \"LOGIN\", module: NAMESPACE });\n    getUser(dispatch);\n  }\n};\n\n// Initial state\nexport const INITIAL_STATE = {\n  isCheckingLoginStatus: false,\n  isAuth: false,\n  user: {},\n};\n\n// Selectors\nexport const isChecking = (state) => state.isCheckingLoginStatus;\nexport const isAuth = (state) => state.isAuth;\nexport const isAdmin = (state) => state.user.type === \"Admin\";\nexport const isClient = (state) => state.user.type === \"Client\";\nexport const isAgent = (state) => state.user.type === \"Agent\";\n\n// Reducer\nexport function reducer(state, action) {\n  switch (action.type) {\n    case \"CHECKING\": {\n      return { ...state, isChecking: true };\n    }\n    case \"LOGOUT\": {\n      return { ...state, isChecking: false, isAuth: false };\n    }\n    case \"LOGIN\": {\n      return { ...state, isChecking: false, isAuth: true };\n    }\n    case \"SET_USER\": {\n      return { ...state, user: action.payload };\n    }\n    default:\n      return state;\n  }\n}\n","export const getType = (state, type) => {\n  return state[type];\n};\n\nexport const getServerURL = () => {\n  return \"https://tickie-server.herokuapp.com/api\";\n};\n","import axios from \"axios\";\nimport { getServerURL } from \"../general\";\n\n// Module name\nexport const NAMESPACE = \"tickets\";\n\n// Constants\nconst SERVER_URL = getServerURL();\n\n// Actions\nexport const getTickets = async (dispatch) => {\n  const TOKEN = window.localStorage.getItem(\"token\");\n  dispatch({\n    type: \"GETTING_TICKETS\",\n    module: NAMESPACE,\n  });\n\n  try {\n    let tickets = await axios.get(`${SERVER_URL}/ticket`, {\n      headers: { token: TOKEN },\n    });\n    dispatch({\n      type: \"ALL_TICKETS\",\n      module: NAMESPACE,\n      payload: tickets.data,\n    });\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: \"TICKETS_FAILED\",\n      module: NAMESPACE,\n    });\n  }\n};\n\n// Updates the state with newly sorted payload\nexport const updateSort = async (dispatch, payload) => {\n  dispatch({\n    type: \"UPDATE_SORT\",\n    module: NAMESPACE,\n  });\n\n  try {\n    dispatch({\n      type: \"ALL_TICKETS\",\n      module: NAMESPACE,\n      payload: payload,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// @desc Creates a new ticket\nexport const createTicket = async (dispatch, ticket) => {\n  const token = window.localStorage.getItem(\"token\");\n  try {\n    await axios.post(`${SERVER_URL}/ticket/create`, ticket, {\n      headers: { token: token },\n    });\n    window.location.href = \"/tickie\";\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const updateTicket = async (\n  dispatch,\n  ticket,\n  agent,\n  priority,\n  status\n) => {\n  const TOKEN = window.localStorage.getItem(\"token\");\n  try {\n    let newTicket = await axios.put(\n      `${SERVER_URL}/ticket/update/open`,\n      {\n        _id: ticket._id,\n        priority,\n        assigned_to: agent,\n        status,\n      },\n      {\n        headers: { token: TOKEN },\n      }\n    );\n    dispatch({\n      type: \"UPDATE_TICKETS\",\n      module: NAMESPACE,\n      payload: newTicket.data,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const assignAgent = (dispatch, id) => {\n  dispatch({\n    type: \"ASSIGN_AGENT\",\n    module: NAMESPACE,\n    payload: id,\n  });\n};\n\nexport const assignPriority = (dispatch, priority) => {\n  dispatch({\n    type: \"ASSIGN_PRIORITY\",\n    module: NAMESPACE,\n    payload: priority,\n  });\n};\n\nexport const assignStatus = (dispatch, status) => {\n  dispatch({\n    type: \"ASSIGN_STATUS\",\n    module: NAMESPACE,\n    payload: status,\n  });\n};\n\n// Initial state\nexport const INITIAL_STATE = {\n  isGettingTickets: false,\n  tickets: [],\n  agent: \"\",\n  priority: \"\",\n  status: \"\",\n};\n\n// Selectors\nexport const gettingTickets = (state) => state.isGettingTickets;\nexport const tickets = (state) => state.tickets;\nexport const nilTickets = (state) =>\n  !state.isGettingTickets && state.tickets.length === 0;\nexport const assignedAgent = (state) => state.agent;\nexport const assignedPriority = (state) => state.priority;\nexport const assignedStatus = (state) => state.status;\nexport const getClosedTickets = (state) =>\n  state.tickets.filter(\n    (tic) => tic.status === \"Resolved\" || tic.status === \"Archived\"\n  );\nexport const getOpenTickets = (state) =>\n  state.tickets.filter((tic) => tic.status === \"Open\");\nexport const getAssignedTickets = (state) =>\n  state.tickets.filter((tic) => tic.status === \"Assigned\");\nexport const getWIPTickets = (state) =>\n  state.tickets.filter((tic) => tic.status === \"In-progress\");\n\n// Reducer\nexport function reducer(state, action) {\n  switch (action.type) {\n    case \"GETTING_TICKETS\": {\n      return { ...state, isGettingTickets: true };\n    }\n    case \"ALL_TICKETS\": {\n      return { ...state, isGettingTickets: false, tickets: action.payload };\n    }\n    case \"TICKETS_FAILED\": {\n      return { ...state, isGettingTickets: false };\n    }\n    case \"ASSIGN_AGENT\": {\n      return { ...state, agent: action.payload };\n    }\n    case \"ASSIGN_PRIORITY\": {\n      return { ...state, priority: action.payload };\n    }\n    case \"ASSIGN_STATUS\": {\n      return { ...state, status: action.payload };\n    }\n    case \"UPDATE_TICKETS\": {\n      let tickets = state.tickets.map((tic) =>\n        tic._id === action.payload._id ? action.payload : tic\n      );\n      console.log(tickets);\n      return { ...state, tickets: tickets };\n    }\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\nimport { getServerURL } from \"../general\";\n\n// Module name\nexport const NAMESPACE = \"users\";\n\n// Constants\nconst SERVER_URL = getServerURL();\nconst TOKEN = window.localStorage.getItem(\"token\");\n\n// Actions\nexport const getAgents = async (dispatch) => {\n  try {\n    let results = await axios.get(`${SERVER_URL}/auth/user/agents`, {\n      headers: { token: TOKEN },\n    });\n    dispatch({\n      type: \"ALL_AGENTS\",\n      module: NAMESPACE,\n      payload: results.data.users,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getAllUsers = async (dispatch) => {\n  try {\n    let results = await axios.get(`${SERVER_URL}/auth/users`, {\n      headers: { token: TOKEN },\n    });\n    dispatch({\n      type: \"ALL_USERS\",\n      module: NAMESPACE,\n      payload: results.data.users,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const addAccount = async (dispatch, user) => {\n  try {\n    await axios.post(`${SERVER_URL}/auth/register`, user);\n    if (user.type === \"Agent\") {\n      getAgents(dispatch);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const checkEmailExists = (value, state) => {\n  return state.users.find((user) => user.email === value);\n};\nexport const passwordsSame = (pwd1, pwd2) => pwd1 === pwd2;\n\n// Initial state\nexport const INITIAL_STATE = {\n  agents: [],\n  users: [],\n};\n\n// Selectors\nexport const agents = (state) => state.agents;\nexport const getFullName = (state) => `${state.user.fname} ${state.user.lname}`;\nexport const getEmail = (state) => state.user.email;\nexport const getUserID = (state) => state.user._id;\nexport const getUserType = (state) => state.user.type;\nexport const allUsers = (state) => state.users;\nexport const getUserRole = (state) => state.user.role || \"Unavailable\";\nexport const getUserDesc = (state) => state.user.description || \"Unavailable\";\n\n// Reducer\nexport function reducer(state, action) {\n  switch (action.type) {\n    case \"ALL_AGENTS\": {\n      return { ...state, agents: action.payload };\n    }\n    case \"ALL_USERS\": {\n      return { ...state, users: action.payload };\n    }\n    case \"ADD_AGENT_ACCOUNT\": {\n      return { ...state, agents: [...state.agents, action.payload] };\n    }\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\nimport { getServerURL } from \"../general\";\n\n// Module name\nexport const NAMESPACE = \"category\";\n\n// Constants\nconst SERVER_URL = getServerURL();\n\n// Actions\nexport const addCategory = async (dispatch, value) => {\n  const TOKEN = window.localStorage.getItem(\"token\");\n  value.name = value.name.charAt(0).toUpperCase() + value.name.substring(1);\n  try {\n    let results = await axios.post(`${SERVER_URL}/category`, value, {\n      headers: { token: TOKEN },\n    });\n    dispatch({\n      type: \"ADD_CATEGORY\",\n      module: NAMESPACE,\n      payload: results.data.category,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getCategories = async (dispatch) => {\n  try {\n    let results = await axios.get(`${SERVER_URL}/category`);\n    dispatch({\n      type: \"GET_CATEGORIES\",\n      module: NAMESPACE,\n      payload: results.data.categories,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Initial state\nexport const INITIAL_STATE = {\n  categories: [],\n};\n\n// Selectors\nexport const categoryExists = (value, state) => {\n  return state.categories.find((cat) => cat.name.toUpperCase() === value.toUpperCase());\n};\nexport const categories = (state) => state.categories;\n\n// Reducer\nexport function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_CATEGORY\": {\n      return { ...state, categories: [...state.categories, action.payload] };\n    }\n    case \"GET_CATEGORIES\": {\n      return { ...state, categories: action.payload };\n    }\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\nimport { getServerURL } from \"../general\";\n\n// Module name\nexport const NAMESPACE = \"organisation\";\n\n// Constants\nconst SERVER_URL = getServerURL();\nconst TOKEN = window.localStorage.getItem(\"token\");\n\n// Actions\n\nexport const addOrganisation = async (dispatch, value) => {\n  console.log(value);\n  try {\n    let org = await axios.post(\n      `${SERVER_URL}/org`,\n      { name: formatName(value.name), description: value.description },\n      {\n        headers: { token: TOKEN },\n      }\n    );\n    dispatch({\n      type: \"ADD_ORGANISATIONS\",\n      module: NAMESPACE,\n      payload: org.data,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// @desc Gets organisations\nexport const getOrganisations = async (dispatch) => {\n  try {\n    let results = await axios.get(`${SERVER_URL}/org`);\n    dispatch({\n      type: \"GET_ORGANISATIONS\",\n      module: NAMESPACE,\n      payload: results.data,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Initial state\nexport const INITIAL_STATE = {\n  organisations: [],\n};\n\n// Helper function\nconst formatName = (value) => {\n  return value\n    .split(\" \")\n    .map((word) => word[0].toUpperCase() + word.substring(1))\n    .join(\" \");\n};\n\n// Selectors\nexport const organisationExists = (value, state) => {\n  return state.organisations.find((org) => org.name === formatName(value));\n};\nexport const organisations = (state) => state.organisations;\n\n// Reducer\nexport function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_ORGANISATIONS\": {\n      return {\n        ...state,\n        organisations: [...state.organisations, action.payload],\n      };\n    }\n    case \"GET_ORGANISATIONS\": {\n      return { ...state, organisations: action.payload };\n    }\n    default:\n      return state;\n  }\n}\n","import React, { createContext, useReducer } from \"react\";\nimport * as authentication from \"../../logic/authentication\";\nimport * as tickets from \"../../logic/ticket\";\nimport * as users from \"../../logic/user\";\nimport * as category from \"../../logic/category\";\nimport * as organisation from \"../../logic/organisation\";\nimport logger from \"./logger\";\n\nconst initialState = {\n  ...authentication.INITIAL_STATE,\n  ...tickets.INITIAL_STATE,\n  ...users.INITIAL_STATE,\n  ...category.INITIAL_STATE,\n  ...organisation.INITIAL_STATE,\n};\n\nexport const store = createContext(initialState);\nconst { Provider } = store;\n\nconst GlobalStoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    // handle thunks\n    if (typeof action === \"function\" && typeof dispatch === \"function\") {\n      action(dispatch);\n      return state;\n    }\n    // otherwise, it's a regular reducer.\n    const nextState = {\n      [authentication.NAMESPACE]: authentication.reducer(state, action),\n      [tickets.NAMESPACE]: tickets.reducer(state, action),\n      [users.NAMESPACE]: users.reducer(state, action),\n      [category.NAMESPACE]: category.reducer(state, action),\n      [organisation.NAMESPACE]: organisation.reducer(state, action),\n    }[action.module];\n    if (nextState === undefined) {\n      return state;\n    }\n\n    logger(state, action, nextState);\n\n    return nextState;\n  }, initialState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport default GlobalStoreProvider;\n","import React, { useEffect, useContext } from \"react\";\nimport { Table, Tag } from \"antd\";\nimport {\n  sortableContainer,\n  sortableElement,\n  sortableHandle,\n} from \"react-sortable-hoc\";\nimport {\n  MenuOutlined,\n  CheckCircleOutlined,\n  SyncOutlined,\n  ExclamationCircleOutlined,\n  ClockCircleOutlined,\n} from \"@ant-design/icons\";\nimport arrayMove from \"array-move\";\nimport { getTickets, tickets, updateSort } from \"../../logic/ticket\";\nimport { store } from \"../../components/GlobalStoreProvider\";\nconst DragHandle = sortableHandle(() => (\n  <MenuOutlined style={{ cursor: \"pointer\", color: \"#999\" }} />\n));\n\nconst columns = [\n  {\n    title: \"Sort\",\n    dataIndex: \"sort\",\n    width: 30,\n    className: \"drag-visible\",\n    render: () => <DragHandle />,\n  },\n  {\n    title: \"ID\",\n    dataIndex: \"key\",\n    className: \"drag-visible\",\n  },\n  {\n    title: \"Title\",\n    dataIndex: \"name\",\n    className: \"drag-visible\",\n  },\n  {\n    title: \"Description\",\n    dataIndex: \"desc\",\n  },\n  {\n    title: \"Status\",\n    dataIndex: \"status\",\n    render: (row) => {\n      switch (row) {\n        case \"Open\": {\n          return (\n            <Tag\n              value={row}\n              icon={<ExclamationCircleOutlined />}\n              color=\"warning\"\n            >\n              {row}\n            </Tag>\n          );\n        }\n        case \"Assigned\": {\n          return (\n            <Tag icon={<ClockCircleOutlined />} color=\"default\">\n              {row}\n            </Tag>\n          );\n        }\n        case \"In-progress\": {\n          return (\n            <Tag value={row} icon={<SyncOutlined spin />} color=\"processing\">\n              {row}\n            </Tag>\n          );\n        }\n        case \"Resolved\": {\n          return (\n            <Tag value={row} icon={<CheckCircleOutlined />} color=\"success\">\n              {row}\n            </Tag>\n          );\n        }\n        case \"Archived\": {\n          return (\n            <Tag value={row} color=\"default\">\n              {row}\n            </Tag>\n          );\n        }\n        default: {\n          return (\n            <Tag value=\"Unassigned\" color=\"volcano\">\n              Unassigned\n            </Tag>\n          );\n        }\n      }\n    },\n  },\n  {\n    title: \"Assigned\",\n    dataIndex: \"assigned_to\",\n  },\n  {\n    title: \"Remarks\",\n    dataIndex: \"remarks\",\n  },\n];\n\nexport default function SortableTable() {\n  const { dispatch, state } = useContext(store);\n\n  useEffect(() => {\n    getTickets(dispatch)\n  }, []);\n\n  const dataSource = tickets(state);\n\n  const SortableItem = sortableElement((props) => <tr {...props} />);\n  const SortableContainer = sortableContainer((props) => <tbody {...props} />);\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    if (oldIndex !== newIndex) {\n      const newData = arrayMove(\n        [].concat(dataSource),\n        oldIndex,\n        newIndex\n      ).filter((el) => !!el);\n      updateSort(dispatch, newData);\n    }\n  };\n\n  const DraggableBodyRow = ({ className, style, ...restProps }) => {\n    const index = dataSource.findIndex(\n      (x) => x.index === restProps[\"data-row-key\"]\n    );\n    return <SortableItem index={index} {...restProps} />;\n  };\n\n  const DraggableContainer = (props) => (\n    <SortableContainer\n      useDragHandle\n      helperClass=\"row-dragging\"\n      onSortEnd={onSortEnd}\n      {...props}\n    />\n  );\n\n  return (\n    <Table\n      pagination={{\n        position: [\"bottomCenter\"],\n        pageSize: 5,\n      }}\n      dataSource={dataSource}\n      columns={columns}\n      rowKey=\"index\"\n      components={{\n        body: {\n          wrapper: DraggableContainer,\n          row: DraggableBodyRow,\n        },\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"antd\";\n\nexport default function Client_AddTicketButton() {\n  return (\n    <Button type=\"primary\">\n      <Link to=\"/tickie/create\">Add ticket</Link>\n    </Button>\n  );\n}\n","import React from \"react\";\nimport { Alert } from \"antd\";\n\nexport default function AlertButton({ visible, alertMsg }) {\n  return (\n    <>\n      {visible && (\n        <Alert\n          style={{ marginBottom: \"5px\" }}\n          message={alertMsg}\n          type=\"warning\"\n          showIcon\n          closable\n        />\n      )}\n    </>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { Modal, Form, Input } from \"antd\";\nimport { categoryExists } from \"../../logic/category\";\nimport { store } from \"../GlobalStoreProvider\";\nimport AlertButton from \"../AlertButton\";\n\nexport default function CollectionCreateForm({ visible, onCreate, onCancel }) {\n  const { state } = useContext(store);\n  const [alertVisible, setAlertVisible] = useState(false);\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      visible={visible}\n      title=\"Add a new category\"\n      okText=\"Add\"\n      cancelText=\"Cancel\"\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            if (!categoryExists(values.name, state)) {\n              form.resetFields();\n              onCreate(values);\n            } else {\n              setAlertVisible(true);\n            }\n          })\n          .catch((info) => {\n            console.log(\"Validate Failed:\", info);\n          });\n      }}\n    >\n      <Form\n        form={form}\n        layout=\"vertical\"\n        name=\"form_in_modal\"\n        initialValues={{\n          modifier: \"public\",\n        }}\n      >\n        <AlertButton visible={alertVisible} alertMsg=\"Category exists!\" />\n        <Form.Item\n          name=\"name\"\n          label=\"Title\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input the title of category!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"description\" label=\"Description\">\n          <Input type=\"textarea\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import { notification } from \"antd\";\n\nexport const openNotificationWithIcon = (type, msg, desc) => {\n  notification[type]({\n    message: msg,\n    description: desc,\n  });\n};\n\nexport default openNotificationWithIcon;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"antd\";\nimport CollectionCreateForm from \"./CollectionCreateForm\";\nimport { getCategories, addCategory } from \"../../logic/category\";\nimport openNotificationWithIcon from \"../Notification\";\nimport { store } from \"../GlobalStoreProvider\";\n\nexport default function CollectionsPage() {\n  const [visible, setVisible] = useState(false);\n  const { dispatch } = useContext(store);\n\n  useEffect(() => {\n    getCategories(dispatch);\n  }, []);\n\n  const onCreate = (values) => {\n    setVisible(false);\n    addCategory(dispatch, values);\n    openNotificationWithIcon(\n      \"success\",\n      `${values.name} added successfully!`,\n      `A new category has been added.`\n    );\n  };\n\n  return (\n    <div style={{ marginRight: \"20px \" }}>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setVisible(true);\n        }}\n      >\n        Add Category\n      </Button>\n      <CollectionCreateForm\n        visible={visible}\n        onCreate={onCreate}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { Modal, Form, Input } from \"antd\";\nimport { organisationExists } from \"../../logic/organisation\";\nimport { store } from \"../GlobalStoreProvider\";\nimport AlertButton from \"../AlertButton\";\n\nexport default function CollectionCreateForm({ visible, onCreate, onCancel }) {\n  const { state } = useContext(store);\n  const [alertVisible, setAlertVisible] = useState(false);\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      visible={visible}\n      title=\"Add a new organisation\"\n      okText=\"Add\"\n      cancelText=\"Cancel\"\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            if (!organisationExists(values.name, state)) {\n              form.resetFields();\n              onCreate(values);\n            } else {\n              setAlertVisible(true);\n            }\n          })\n          .catch((info) => {\n            console.log(\"Validate Failed:\", info);\n          });\n      }}\n    >\n      <Form\n        form={form}\n        layout=\"vertical\"\n        name=\"form_in_modal\"\n        initialValues={{\n          modifier: \"public\",\n        }}\n      >\n        <AlertButton visible={alertVisible} alertMsg=\"Organisation exists!\" />\n        <Form.Item\n          name=\"name\"\n          label=\"Title\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input the name of organisation!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"description\" label=\"Description\">\n          <Input type=\"textarea\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"antd\";\nimport CollectionCreateForm from \"./OrganisationCreateForm\";\nimport { getOrganisations, addOrganisation } from \"../../logic/organisation\";\nimport openNotificationWithIcon from \"../Notification\";\nimport { store } from \"../GlobalStoreProvider\";\n\nexport default function CollectionsPage() {\n  const [visible, setVisible] = useState(false);\n  const { dispatch } = useContext(store);\n\n  useEffect(() => {\n    getOrganisations(dispatch);\n  }, []);\n\n  const onCreate = (values) => {\n    setVisible(false);\n    addOrganisation(dispatch, values);\n    openNotificationWithIcon(\n      \"success\",\n      `${values.name} added successfully!`,\n      `A new organisation has been added.`\n    );\n  };\n\n  return (\n    <div style={{ marginRight: \"20px \" }}>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setVisible(true);\n        }}\n      >\n        Add Organisation\n      </Button>\n      <CollectionCreateForm\n        visible={visible}\n        onCreate={onCreate}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { Modal, Form, Input, Radio, Select } from \"antd\";\nimport { store } from \"../GlobalStoreProvider\";\nimport AlertButton from \"../AlertButton\";\nimport { checkEmailExists, passwordsSame } from \"../../logic/user\";\nimport { organisations } from \"../../logic/organisation\";\nconst { Option } = Select;\n\nexport default function CollectionCreateForm({ visible, onCreate, onCancel }) {\n  const { state } = useContext(store);\n  const [alertVisible, setAlertVisible] = useState(false);\n  const [alertMsg, setAlertMsg] = useState(\"Email exists!\");\n  const [form] = Form.useForm();\n  const orgs = organisations(state);\n  return (\n    <Modal\n      visible={visible}\n      title=\"Add a new user\"\n      okText=\"Add\"\n      cancelText=\"Cancel\"\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            console.log(values);\n            if (checkEmailExists(values.email, state)) {\n              setAlertVisible(true);\n            } else if (!passwordsSame(values.password, values.password2)) {\n              setAlertMsg(\"Password different!\");\n              setAlertVisible(true);\n            } else {\n              form.resetFields();\n              onCreate(values);\n            }\n          })\n          .catch((info) => {\n            console.log(\"Validate Failed:\", info);\n          });\n      }}\n    >\n      <Form\n        form={form}\n        layout=\"vertical\"\n        name=\"form_in_modal\"\n        initialValues={{\n          modifier: \"public\",\n        }}\n      >\n        <AlertButton visible={alertVisible} alertMsg={alertMsg} />\n        <Form.Item\n          name=\"fname\"\n          label=\"First name\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input first name!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"lname\"\n          label=\"Last name\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input last name!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          label=\"Email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input email!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          label=\"Confirm password\"\n          name=\"password2\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your confirm password!\",\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item name=\"description\" label=\"Description\">\n          <Input type=\"textarea\" />\n        </Form.Item>\n        <Form.Item\n          name=\"role\"\n          label=\"Role\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input role\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"organisation\"\n          label=\"Organisation\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select placeholder=\"Please choose an organisation\" allowClear>\n            {orgs.map((org) => (\n              <Option key={org._id} value={org._id}>\n                {org.name}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name=\"type\"\n          className=\"collection-create-form_last-form-item\"\n        >\n          <Radio.Group>\n            <Radio value=\"Client\">Client</Radio>\n            <Radio value=\"Agent\">Agent</Radio>\n            <Radio value=\"Admin\">Admin</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"antd\";\nimport CollectionCreateForm from \"./CollectionCreateForm\";\nimport { getAllUsers, addAccount } from \"../../logic/user\";\nimport openNotificationWithIcon from \"../Notification\";\nimport { store } from \"../GlobalStoreProvider\";\n\nexport default function CollectionsPage() {\n  const [visible, setVisible] = useState(false);\n  const { dispatch } = useContext(store);\n\n  useEffect(() => {\n    getAllUsers(dispatch);\n  }, []);\n\n  const onCreate = (values) => {\n    setVisible(false);\n    addAccount(dispatch, values);\n    openNotificationWithIcon(\n      \"success\",\n      `New ${values.type} added successfully!`,\n      `${values.fname} ${values.lname} has been added.`\n    );\n  };\n\n  return (\n    <div>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setVisible(true);\n        }}\n      >\n        Add Account\n      </Button>\n      <CollectionCreateForm\n        visible={visible}\n        onCreate={onCreate}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Form, Select } from \"antd\";\nimport { store } from \"../GlobalStoreProvider\";\nimport { agents } from \"../../logic/user\";\nimport { isAdmin, isAgent } from \"../../logic/authentication\";\nimport { assignAgent, assignPriority, assignStatus } from \"../../logic/ticket\";\n\nexport function PrioritySelector() {\n  const { dispatch } = useContext(store);\n  return (\n    <Form.Item label=\"Priority\">\n      <Select onChange={(e) => assignPriority(dispatch, e)}>\n        <Select.Option key={1} value=\"Low\">\n          Low\n        </Select.Option>\n        <Select.Option key={2} value=\"Moderate\">\n          Moderate\n        </Select.Option>\n        <Select.Option key={3} value=\"High\">\n          High\n        </Select.Option>\n      </Select>\n    </Form.Item>\n  );\n}\n\nexport function StatusSelector({ status }) {\n  const { dispatch, state } = useContext(store);\n  const admin = isAdmin(state);\n  const agent = isAgent(state);\n\n  return (\n    <Form.Item label=\"Status\">\n      <Select onChange={(e) => assignStatus(dispatch, e)}>\n        {admin && (\n          <>\n            {status === \"Open\" && (\n              <Select.Option key={1} value=\"Assigned\">\n                Assigned\n              </Select.Option>\n            )}\n\n            {(status === \"Open\" || status === \"Resolved\") && (\n              <Select.Option key={2} value=\"Archived\">\n                Archived\n              </Select.Option>\n            )}\n\n            {status !== \"Open\" && status !== \"Resolved\" && (\n              <Select.Option key={3} value={status}>\n                {status}\n              </Select.Option>\n            )}\n          </>\n        )}\n        {agent && (\n          <>\n            {status !== \"Resolved\" && (\n              <Select.Option key={3} value=\"In-progress\">\n                In-progress\n              </Select.Option>\n            )}\n            <Select.Option key={4} value=\"Resolved\">\n              Resolved\n            </Select.Option>\n          </>\n        )}\n      </Select>\n    </Form.Item>\n  );\n}\n\nexport function AgentSelector() {\n  const { state, dispatch } = useContext(store);\n  const agentsArr = agents(state);\n\n  return (\n    <Form.Item label=\"Assign to\">\n      <Select onChange={(e) => assignAgent(dispatch, e)}>\n        {agentsArr.map((agent) => (\n          <Select.Option key={agent._id} value={agent._id}>\n            {agent.fname} {agent.lname}\n          </Select.Option>\n        ))}\n      </Select>\n    </Form.Item>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport { store } from \"../GlobalStoreProvider\";\nimport { getAgents } from \"../../logic/user\";\nimport {\n  AgentSelector,\n  PrioritySelector,\n  StatusSelector,\n} from \"./AdminSelectors\";\nimport {\n  assignedAgent,\n  assignedPriority,\n  updateTicket,\n  assignedStatus,\n} from \"../../logic/ticket\";\n\nexport default function UpdateTicketButton({ ticket }) {\n  const [ModalText, setModelText] = useState(\"Update ticket\");\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const showModal = () => setVisible(true);\n\n  const { dispatch, state } = useContext(store);\n  useEffect(() => {\n    getAgents(dispatch);\n  }, []);\n\n  const handleOk = () => {\n    setModelText(\"Updating information\");\n    setConfirmLoading(true);\n    updateTicket(\n      dispatch,\n      ticket,\n      assignedAgent(state),\n      assignedPriority(state),\n      assignedStatus(state)\n    );\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return (\n    <>\n      {ticket.status === \"Archived\" ? (\n        <Button type=\"dashed\">Ticket closed</Button>\n      ) : (\n        <>\n          <Button type=\"primary\" onClick={() => showModal()}>\n            {ticket.status === \"Open\" ? \"Assign\" : \"Update Status\"}\n          </Button>\n          <Modal\n            title={ModalText}\n            visible={visible}\n            onOk={() => handleOk()}\n            confirmLoading={confirmLoading}\n            onCancel={() => handleCancel()}\n          >\n            {ticket.status === \"Open\" && <AgentSelector />}\n            <StatusSelector status={ticket.status} />\n            <PrioritySelector />\n          </Modal>\n        </>\n      )}\n    </>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Table, Input, Button, Space, Tag } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { getTickets, tickets } from \"../../logic/ticket\";\nimport { store } from \"../../components/GlobalStoreProvider\";\nimport UpdateTicketButton from \"../../components/AdminUpdateTicketButton\";\nimport { isAdmin } from \"../../logic/authentication\";\nimport {\n  CheckCircleOutlined,\n  SyncOutlined,\n  ExclamationCircleOutlined,\n  ClockCircleOutlined,\n} from \"@ant-design/icons\";\n\nexport default function AdminDashboard() {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedCol, setSearchedCol] = useState(\"\");\n  const { dispatch, state } = useContext(store);\n\n  useEffect(() => {\n    getTickets(dispatch);\n  }, []);\n\n  const data = tickets(state);\n\n  let searchInput;\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      console.log(searchInput);\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedCol === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedCol(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const columns = [\n    {\n      title: \"ID\",\n      dataIndex: \"key\",\n      key: \"key\",\n      ...getColumnSearchProps(\"key\"),\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      ...getColumnSearchProps(\"name\"),\n    },\n    {\n      title: \"Description\",\n      dataIndex: \"desc\",\n      key: \"desc\",\n      ...getColumnSearchProps(\"desc\"),\n    },\n    {\n      title: \"Category\",\n      dataIndex: \"category\",\n      key: \"category\",\n      ...getColumnSearchProps(\"category\"),\n    },\n    {\n      title: \"Remarks\",\n      dataIndex: \"remarks\",\n      key: \"remarks\",\n      ...getColumnSearchProps(\"remarks\"),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      ...getColumnSearchProps(\"status\"),\n      render: (row) => {\n        switch (row) {\n          case \"Open\": {\n            return (\n              <Tag\n                value={row}\n                icon={<ExclamationCircleOutlined />}\n                color=\"warning\"\n              >\n                {row}\n              </Tag>\n            );\n          }\n          case \"Assigned\": {\n            return (\n              <Tag icon={<ClockCircleOutlined />} color=\"default\">\n                {row}\n              </Tag>\n            );\n          }\n          case \"In-progress\": {\n            return (\n              <Tag value={row} icon={<SyncOutlined spin />} color=\"processing\">\n                {row}\n              </Tag>\n            );\n          }\n          case \"Resolved\": {\n            return (\n              <Tag value={row} icon={<CheckCircleOutlined />} color=\"success\">\n                {row}\n              </Tag>\n            );\n          }\n          case \"Archived\": {\n            return (\n              <Tag value={row} color=\"default\">\n                {row}\n              </Tag>\n            );\n          }\n          default: {\n            return (\n              <Tag value=\"Unassigned\" color=\"volcano\">\n                Unassigned\n              </Tag>\n            );\n          }\n        }\n      },\n    },\n    {\n      title: \"Priority\",\n      dataIndex: \"priority\",\n      key: \"priority\",\n      ...getColumnSearchProps(\"priority\"),\n      render: (row) => {\n        switch (row) {\n          case \"Low\": {\n            return (\n              <Tag value={row} color=\"blue\">\n                {row}\n              </Tag>\n            );\n          }\n          case \"Moderate\": {\n            return (\n              <Tag value={row} color=\"magenta\">\n                {row}\n              </Tag>\n            );\n          }\n          case \"High\": {\n            return (\n              <Tag value={row} color=\"red\">\n                {row}\n              </Tag>\n            );\n          }\n          default: {\n            return (\n              <Tag value=\"Unassigned\" color=\"volcano\">\n                Unassigned\n              </Tag>\n            );\n          }\n        }\n      },\n    },\n    {\n      title: \"Created by\",\n      dataIndex: \"created_by\",\n      key: \"created_by\",\n      ...getColumnSearchProps(\"created_by\"),\n    },\n    {\n      title: \"Actions\",\n      render: (row) => (\n        <>\n          <UpdateTicketButton ticket={row} type=\"primary\" />\n        </>\n      ),\n    },\n  ];\n\n  if (isAdmin(state)) {\n    columns.splice(columns.length - 1, 0, {\n      title: \"Assigned\",\n      dataIndex: \"assigned_to\",\n      key: \"assigned_to\",\n      ...getColumnSearchProps(\"assigned_to\"),\n    });\n  }\n\n  return (\n    <Table\n      pagination={{\n        position: [\"bottomCenter\"],\n        pageSize: 2,\n      }}\n      style={{ margin: \"0 auto\", width: \"90vw\" }}\n      columns={columns}\n      dataSource={data}\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport CustomerTable from \"./Client_Table\";\nimport AddButton from \"./Client_AddTicketButton\";\nimport AddCategoryButton from \"../../components/AddCategoryButton\";\nimport AddOrganisationButton from \"../../components/AddOrganisationButton\";\nimport AddAccountButton from \"../../components/AddAccountButton\";\nimport { store } from \"../../components/GlobalStoreProvider\";\nimport { isClient, isAdmin } from \"../../logic/authentication\";\nimport AdminDashboard from \"./Admin_Table\";\nimport { Row, Col } from \"antd\";\n\nfunction Dashboard() {\n  const { state } = useContext(store);\n  const client = isClient(state);\n  const admin = isAdmin(state);\n\n  return (\n    <>\n      <Row justify=\"space-around\" style={{ padding: \"10px\" }}>\n        <Col style={{ display: \"flex\" }}>\n          {client && <AddButton />}\n          {admin && <AddCategoryButton />} {admin && <AddOrganisationButton />}\n          {admin && <AddAccountButton />}\n        </Col>\n      </Row>\n      <Row justify=\"space-around\">\n        <Col>\n          {client && <CustomerTable />}\n          {!client && <AdminDashboard />}\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Popover, Col, Row, Form, Input, Button, Radio, Select } from \"antd\";\nimport { createTicket } from \"../../logic/ticket\";\nimport { getCategories, categories } from \"../../logic/category\";\nimport { store } from \"../../components/GlobalStoreProvider\";\n\nexport default function AddTicketForm() {\n  const { dispatch, state } = useContext(store);\n\n  useEffect(() => {\n    getCategories(dispatch);\n  }, []);\n\n  // Form Init\n  const [componentSize, setComponentSize] = useState(\"default\");\n  const [titlePopupVisible, setTitlePopupVisible] = useState(false);\n  const [descPopupVisibile, setDescPopupVisible] = useState(false);\n\n  const onFormLayoutChange = ({ size }) => {\n    setComponentSize(size);\n  };\n\n  // Categories\n  const category = categories(state);\n  const onFinish = (values) => {\n    createTicket(dispatch, values.ticket);\n  };\n\n  const validateMessages = {\n    required: \"${label} is required!\",\n  };\n\n  return (\n    <Row\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"90vh\",\n      }}\n    >\n      <Col style={{ margin: \"0 auto\" }}>\n        <Form\n          layout=\"horizontal\"\n          initialValues={{ size: componentSize }}\n          onValuesChange={onFormLayoutChange}\n          size={componentSize}\n          onFinish={onFinish}\n          name=\"nest-messages\"\n          validateMessages={validateMessages}\n          style={{ width: \"50vh\" }}\n        >\n          <Form.Item name=\"size\">\n            <Radio.Group>\n              <Radio.Button value=\"small\">Small</Radio.Button>\n              <Radio.Button value=\"default\">Default</Radio.Button>\n              <Radio.Button value=\"large\">Large</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n\n          <Popover\n            content={\n              <>\n                <p>This should describe the problem in a single line</p>{\" \"}\n                <a onClick={() => setTitlePopupVisible(false)}>Close</a>\n              </>\n            }\n            title=\"Note\"\n            trigger=\"click\"\n            visible={titlePopupVisible}\n            onVisibleChange={() => setTitlePopupVisible(!titlePopupVisible)}\n          >\n            <Form.Item\n              name={[\"ticket\", \"name\"]}\n              label=\"Title\"\n              rules={[{ required: true }]}\n            >\n              <Input />\n            </Form.Item>\n          </Popover>\n\n          <Popover\n            content={\n              <>\n                <p>\n                  Please be as specify as possible. This will assist the\n                  engineers to speed up troubleshooting and get the problem\n                  solved quickly.\n                </p>{\" \"}\n                <a onClick={() => setDescPopupVisible(false)}>Close</a>\n              </>\n            }\n            title=\"Note\"\n            trigger=\"click\"\n            visible={descPopupVisibile}\n            onVisibleChange={() => setDescPopupVisible(!descPopupVisibile)}\n          >\n            <Form.Item\n              name={[\"ticket\", \"desc\"]}\n              label=\"Description\"\n              rules={[{ required: true }]}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Popover>\n          <Form.Item\n            name={[\"ticket\", \"category\"]}\n            label=\"Category\"\n            rules={[{ required: true }]}\n          >\n            <Select>\n              {category.map((cat) => (\n                <Select.Option key={cat._id} value={cat._id}>\n                  {cat.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item name={[\"ticket\", \"remarks\"]} label=\"Remarks\">\n            <Input.TextArea />\n          </Form.Item>\n          <p>\n            Please note that once your ticket has been submitted, it will no\n            longer be editable.\n          </p>\n          <p>Please make sure you have included all the details.</p>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Statistic, Col, Row } from \"antd\";\nimport { LikeOutlined } from \"@ant-design/icons\";\nimport {\n  getClosedTickets,\n  getOpenTickets,\n  getAssignedTickets,\n  getWIPTickets,\n} from \"../../../logic/ticket\";\nimport { store } from \"../../GlobalStoreProvider\";\nimport { isAgent } from \"../../../logic/authentication\";\n\nexport default function KPITracker() {\n  const { state } = useContext(store);\n  const noOfClosedTickets = getClosedTickets(state).length;\n  const noOfOpenTickets = getOpenTickets(state).length;\n  const noOfAssignedTickets = getAssignedTickets(state).length;\n  const noOfInprogressTickets = getWIPTickets(state).length;\n  const agent = isAgent(state);\n\n  return (\n    <div>\n      <Row>\n        {!agent && (\n          <Col span={6}>\n            <Statistic title=\"Open Tickets\" value={noOfOpenTickets} />\n          </Col>\n        )}\n        <Col span={6}>\n          <Statistic title=\"Assigned\" value={noOfAssignedTickets} />\n        </Col>\n        <Col span={6}>\n          <Statistic title=\"In-Progress\" value={noOfInprogressTickets} />\n        </Col>\n        <Col span={6}>\n          <Statistic\n            title=\"Closed Tickets\"\n            value={noOfClosedTickets}\n            prefix={<LikeOutlined />}\n            suffix=\"/ 100\"\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Table, Input, Button, Space } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { store } from \"../../GlobalStoreProvider\";\nimport { getType } from \"../../../logic/general\";\n\nexport default function SearchableTable({ type }) {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedCol, setSearchedCol] = useState(\"\");\n  const [data, setData] = useState([]);\n  const { state } = useContext(store);\n\n  useEffect(() => {\n    setData(getType(state, type));\n  }, [state.organisations, state.categories]);\n\n  let searchInput;\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 3 }}>\n        <Input\n          ref={(node) => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedCol === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        <span style={{ margin: \"-10px\" }}>{text}</span>\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedCol(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const columns = [\n    {\n      title: type.charAt(0).toUpperCase() + type.substring(1),\n      dataIndex: \"name\",\n      key: \"name\",\n      ...getColumnSearchProps(\"name\"),\n    },\n  ];\n\n  return (\n    <>\n      <Table\n        style={{ margin: \"0 auto\" }}\n        columns={columns}\n        dataSource={data}\n        pagination={{\n          size: \"small\",\n          position: [\"bottomCenter\"],\n          pageSize: 3,\n        }}\n      />\n    </>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { Drawer, Divider, Col, Row, Button } from \"antd\";\nimport { store } from \"../../GlobalStoreProvider\";\nimport {\n  getFullName,\n  getEmail,\n  getUserID,\n  getUserType,\n  getUserRole,\n  getUserDesc,\n} from \"../../../logic/user\";\nimport KPITracker from \"./KPITracker\";\nimport SearchableTable from \"./SearchableTable\";\nimport { logout, isAdmin } from \"../../../logic/authentication\";\n\nconst DescriptionItem = ({ title, content }) => (\n  <div className=\"site-description-item-profile-wrapper\">\n    <p className=\"site-description-item-profile-p-label\">\n      {title}: <span style={{ color: \"grey\" }}>{content}</span>\n    </p>\n  </div>\n);\n\nexport default function Nav_ProfileButton() {\n  const [visible, setVisible] = useState(false);\n  const { state, dispatch } = useContext(store);\n  const fullName = getFullName(state);\n  const email = getEmail(state);\n  const userID = getUserID(state);\n  const userType = getUserType(state);\n  const admin = isAdmin(state);\n  const userRole = getUserRole(state);\n  const userDesc = getUserDesc(state);\n\n  const showDrawer = (e) => {\n    e.preventDefault();\n    setVisible(true);\n  };\n\n  const onClose = (e) => {\n    e.preventDefault();\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <span\n        style={{ color: \"white\", paddingRight: \"15px\" }}\n        onClick={(e) => showDrawer(e)}\n      >\n        {fullName}\n      </span>\n      <Drawer\n        width={640}\n        placement=\"right\"\n        closable={false}\n        onClose={(e) => onClose(e)}\n        visible={visible}\n      >\n        <p\n          className=\"site-description-item-profile-p\"\n          style={{ marginBottom: 24 }}\n        >\n          Performance\n        </p>\n        <Row>\n          <Col span={24}>\n            <KPITracker />\n          </Col>\n        </Row>\n        {admin && (\n          <>\n            <Divider />\n            <p className=\"site-description-item-profile-p\">Information</p>\n            <Row>\n              <Col span={12}>\n                <SearchableTable type=\"organisations\" />\n              </Col>\n              <Col span={12}>\n                <SearchableTable type=\"categories\" />\n              </Col>\n            </Row>\n          </>\n        )}\n        <Divider />\n        <p className=\"site-description-item-profile-p\">User Profile</p>\n        <Row>\n          <Col span={12}>\n            <DescriptionItem title=\"User ID\" content={userID} />\n          </Col>\n          <Col span={12}>\n            <DescriptionItem title=\"Full Name\" content={fullName} />\n          </Col>\n          <Col span={12}>\n            <DescriptionItem title=\"Account Type\" content={userType} />\n          </Col>\n          <Col span={12}>\n            <DescriptionItem title=\"Email\" content={email} />\n          </Col>\n        </Row>\n\n        <Divider />\n        <p className=\"site-description-item-profile-p\">Company</p>\n        <Row>\n          <Col span={12}>\n            <DescriptionItem title=\"Position\" content={userRole} />\n          </Col>\n          <Col span={12}>\n            <DescriptionItem title=\"Responsibilities\" content={userDesc} />\n          </Col>\n        </Row>\n        <Divider />\n        <p className=\"site-description-item-profile-p\">Actions</p>\n        <Row>\n          <Col>\n            <Button type=\"dashed\" onClick={() => logout(dispatch)}>\n              Logout\n            </Button>\n          </Col>\n        </Row>\n      </Drawer>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Breadcrumb } from \"antd\";\nimport ViewProfileButton from \"./ViewProfileButton\";\n\nexport default function Navigation() {\n  return (\n    <Breadcrumb\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        backgroundColor: \"#101e2b\",\n        color: \"white\",\n        height: \"8vh\",\n        fontSize: \"15px\",\n      }}\n    >\n      <Breadcrumb.Item href=\"/\">\n        <span\n          style={{\n            color: \"white\",\n            paddingLeft: \"10px\",\n            fontFamily: \"'Helvetica Neue', Helvetica, Arial, sans-serif\",\n            fontWeight: \"700\",\n          }}\n        >\n          Tickie\n        </span>\n      </Breadcrumb.Item>\n      <Breadcrumb.Item href=\"/\">\n        <ViewProfileButton />\n      </Breadcrumb.Item>\n    </Breadcrumb>\n  );\n}\n","import React from \"react\";\n\nexport default function NoEntry() {\n  return <div>No entry</div>;\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Form, Input, Button, Checkbox, Typography, Alert } from \"antd\";\nimport { store } from \"../../components/GlobalStoreProvider\";\nimport { login, checkToken } from \"../../logic/authentication\";\nimport { getServerURL } from \"../../logic/general\";\nconst { Text } = Typography;\n\nexport default function Login() {\n  const { dispatch } = useContext(store);\n  const [visible, setVisible] = useState(false);\n  const [alertMsg, setAlertMsg] = useState(\"\");\n  const SERVER_URL = getServerURL();\n\n  useEffect(() => {\n    checkToken(dispatch);\n  }, []);\n\n  const onFinish = async (values) => {\n    try {\n      let results = await axios.post(`${SERVER_URL}/auth/login`, values);\n      login(dispatch, results.data.token);\n    } catch (error) {\n      setVisible(true);\n      setAlertMsg(error.response.data.msg);\n      console.error(error);\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div>\n        <Text\n          style={{\n            fontFamily: '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\n            fontWeight: \"700\",\n            color: \"#11202e\",\n            fontSize: \"40px\",\n            marginBottom: \"-10px\",\n            paddingBottom: \"0px\",\n          }}\n        >\n          Welcome back!\n        </Text>\n\n        <Form\n          style={{ width: \"50vw\" }}\n          name=\"basic\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          {visible && (\n            <Alert\n              style={{ marginBottom: \"5px\" }}\n              message={alertMsg}\n              type=\"warning\"\n              showIcon\n              closable\n              afterClose={() => setVisible(false)}\n            />\n          )}\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your email!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item name=\"remember\" valuePropName=\"checked\">\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n\n          <Form.Item style={{ marginTop: \"0px\" }}>\n            <Button\n              type=\"primary\"\n              shape=\"round\"\n              size=\"large\"\n              htmlType=\"submit\"\n              ghost\n            >\n              Login Tickie\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { GithubOutlined } from \"@ant-design/icons\";\nimport \"./index.css\";\n\nexport default function index() {\n  return (\n    <a\n      href\n      style={styles}\n      href=\"https://github.com/metildachee/tickie.git\"\n      target=\"_blank\"\n      className=\"shake-animation\"\n    >\n      <GithubOutlined />\n    </a>\n  );\n}\n\nconst styles = {\n  position: \"absolute\",\n  fontSize: \"30px\",\n  top: \"10px\",\n  right: \"30px\",\n  zIndex: \"1\",\n};\n","import React from \"react\";\nimport Login from \"../../components/Login\";\nimport KPI from \"./kpi.jpg\";\nimport Productivity from \"./productivity.jpg\";\nimport GithubIcon from \"./GithubIcon\";\nimport \"./index.css\";\n\nimport { Typography, Button, Row, Col } from \"antd\";\nconst { Text } = Typography;\n\nexport default function Landing() {\n  return (\n    <div className=\"smooth-scroll-parent\">\n      <div className=\"container\">\n        <GithubIcon />\n        <section\n          className=\"section center-xy\"\n          style={{ backgroundColor: \"aliceblue\" }}\n        >\n          <div>\n            <div>\n              <h1 className=\"tickie-title\">Tickie</h1>\n              <Text type=\"secondary\">Ticket support systems suck, </Text>\n              <Text mark>it doesn't have to.</Text>\n            </div>\n            <div style={{ marginTop: \"10px\" }}>\n              <Button\n                size=\"large\"\n                shape=\"round\"\n                type=\"primary\"\n                style={{ marginRight: \"15px\" }}\n              >\n                <a href=\"#learn-more\">Learn more</a>\n              </Button>\n              <Button type=\"primary\" size=\"large\" shape=\"round\" ghost>\n                <a href=\"#login\">Login Tickie</a>\n              </Button>\n            </div>\n          </div>\n        </section>\n        <section id=\"learn-more\" className=\"section center-xy\">\n          <Row>\n            <Col className=\"center-xy\" span={12}>\n              <div>\n                <Row>\n                  <img src={Productivity} alt=\"Productivity\" />\n                </Row>\n                <Row>\n                  <Text style={{ fontSize: \"20px\" }}>\n                    Add comments, view threads to see <Text mark>exactly</Text>{\" \"}\n                    what is happening.\n                  </Text>\n                </Row>\n              </div>\n            </Col>\n            <Col className=\"center-xy\" span={12}>\n              <div>\n                <Text style={{ fontSize: \"20px\" }}>\n                  Manage KPI and performance <Text mark>at ease</Text>\n                </Text>\n                <img src={KPI} alt=\"KPI\" />\n              </div>\n            </Col>\n          </Row>\n        </section>\n        <section id=\"login\" className=\"section center-xy\">\n          <Login />\n        </section>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport { store } from \"./components/GlobalStoreProvider\";\nimport { isAuth, isClient } from \"./logic/authentication\";\nimport Dashboard from \"./pages/Dashboard\";\nimport AddTicketForm from \"./pages/AddTicketForm\";\nimport Navigation from \"./components/Navigation\";\nimport NoEntry from \"./pages/NoEntry\";\nimport Landing from \"./pages/Landing\";\n\nfunction App() {\n  const { state } = useContext(store);\n  const isLogin = isAuth(state);\n  const client = isClient(state);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {isLogin && <Navigation />}\n        <Switch>\n          <Route path=\"/tickie/\" exact>\n            {isLogin ? <Dashboard /> : <Landing />}\n          </Route>\n\n          <Route path=\"/tickie/create\" exact>\n            {isLogin && client ? <AddTicketForm /> : <NoEntry />}\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport GlobalStoreProvider from \"./components/GlobalStoreProvider\";\nReactDOM.render(\n  <GlobalStoreProvider>\n    <App />\n  </GlobalStoreProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}